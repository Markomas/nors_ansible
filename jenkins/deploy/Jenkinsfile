pipeline {
    agent any

    options {
       ansiColor('xterm')
    }

    stages {
        stage('Get ansible inventory') {
            steps {
                copyArtifacts filter: 'nors_news_ansible_inventory.yml', fingerprintArtifacts: true, projectName: env.TERRAFORM_JOB_NAME
            }
        }

        stage('Get latest release version') {
            steps {
                copyArtifacts filter: 'nors_news.zip', fingerprintArtifacts: true, projectName: env.BUILD_JOB_NAME
            }
        }

        stage('Deploy release to app servers') {
            steps {
                ansiblePlaybook(
                    playbook: 'webserver_deploy.yml',
                    inventory: 'nors_news_ansible_inventory.yml',
                    credentialsId: 'jenkins_agent',
                    colorized: true,
                    extraVars: [
                        deployment_zip_path: 'nors_news.zip'
                    ]
                )
            }
        }

        stage('Deploy release to background servers') {
            steps {
                withCredentials([file(credentialsId: 'news_cookies', variable: 'COOKIES_FILE')]) {

                    ansiblePlaybook(
                        playbook: 'webserver_background.yml',
                        inventory: 'nors_news_ansible_inventory.yml',
                        credentialsId: 'jenkins_agent',
                        colorized: true,
                        extraVars: [
                            deployment_zip_path: 'nors_news.zip'
                        ]
                    )
                }
            }
        }

        stage('Deploy release to tor servers') {
            steps {
                withCredentials([file(credentialsId: 'tor_key', variable: 'TOR_KEY')]) {

                    ansiblePlaybook(
                        playbook: 'webserver_tor.yml',
                        inventory: 'nors_news_ansible_inventory.yml',
                        credentialsId: 'jenkins_agent',
                        colorized: true
                    )
                }
            }
        }
    }
}